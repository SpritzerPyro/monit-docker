function monit::init() {
  declare -A -g monit_failure_states=(
    [action]="Action failed"
    [checksum]="Checksum failed"
    [bytein]="Download bytes exceeded"
    [byteout]="Upload bytes exceeded"
    [connection]="Connection failed"
    [content]="Content failed"
    [data]="Data access error"
    [exec]="Execution failed"
    [fsflags]="Filesystem flags failed"
    [gid]="GID failed"
    [icmp]="Ping failed"
    [instance]="Monit instance changed"
    [invalid]="Invalid type"
    [link]="Link down"
    [nonexist]="Does not exist"
    [packetin]="Download packets exceeded"
    [packetout]="Upload packets exceeded"
    [permission]="Permission failed"
    [pid]="PID failed"
    [ppid]="PPID failed"
    [resource]="Resource limit matched"
    [saturation]="Saturation exceeded"
    [size]="Size failed"
    [speed]="Speed failed"
    [status]="Status failed"
    [timeout]="Timeout"
    [timestamp]="Timestamp failed"
    [uid]="UID failed"
    [uptime]="Uptime failed"
  )

  declare -A -g monit_success_states=(
    [action]="Action done"
    [checksum]="Checksum succeeded"
    [bytein]="Download bytes ok"
    [byteout]="Upload bytes ok"
    [connection]="Connection succeeded"
    [content]="Content succeeded"
    [data]="Data access succeeded"
    [exec]="Execution succeeded"
    [fsflags]="Filesystem flags succeeded"
    [gid]="GID succeeded"
    [icmp]="Ping succeeded"
    [instance]="Monit instance changed not"
    [invalid]="Type succeeded"
    [link]="Link up"
    [nonexist]="Exists"
    [packetin]="Download packets ok"
    [packetout]="Upload packets ok"
    [permission]="Permission succeeded"
    [pid]="PID succeeded"
    [ppid]="PPID succeeded"
    [resource]="Resource limit succeeded"
    [saturation]="Saturation ok"
    [size]="Size succeeded"
    [speed]="Speed ok"
    [status]="Status succeeded"
    [timeout]="Timeout recovery"
    [timestamp]="Timestamp succeeded"
    [uid]="UID succeeded"
    [uptime]="Uptime succeeded"
  )
}

monit::init
